/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "keys_de.h"

/ {
    macros {
        SHFT_UDSCR: SHFT_UDSCR {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp DE_UNDER>;
        };
        
        SHFT_MNS: SHFT_MNS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp DE_MINUS>;
        };
        
        SHFT_CMA: SHFT_CMA {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp DE_COMMA>;
        };
        
        SHFT_LT: SHFT_LT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp DE_LT>;
        };
        
        SHFT_PRD: SHFT_PRD {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp DE_DOT>;
        };
        
        SHFT_GT: SHFT_GT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp DE_GT>;
        };
        
        SHFT_CLN: SHFT_CLN {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp DE_COLON>;
        };
        
        SHFT_SEMI: SHFT_SEMI {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp DE_SEMI>;
        };
    };
    
    behaviors {
        UDSCR_MNS: UDSCR_MNS {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&SHFT_UDSCR>, <&SHFT_MNS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        CMA_LT: CMA_LT {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&SHFT_CMA>, <&SHFT_LT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        
        PRD_GT: PRD_GT {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&SHFT_PRD>, <&SHFT_GT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        
        CLN_SEMI: CLN_SEMI {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&SHFT_CLN>, <&SHFT_SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        delayed: delayed {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <500>;
            bindings = <&kp>, <&none>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Z  |  U   |  I   |  O   |  P   | BKSP |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K   |  L   |  :;  | SHFT |
            // | CTRL |  Y  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,<  |  .>  |  _-  | ESC  |
            //                    | GUI |  M1 | SPC |   | ENT |  M2  | ALT |

            display-name = "0";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E          &kp R  &kp T        &kp Y    &kp U  &kp I          &kp O    &kp P       &kp BSPC
&kp LSHFT  &kp A  &kp S  &kp D          &kp F  &kp G        &kp H    &kp J  &kp K          &kp L    &CLN_SEMI   &kp RSHIFT
&kp LCTRL  &kp Z  &kp X  &kp C          &kp V  &kp B        &kp N    &kp M  &CMA_LT        &PRD_GT  &UDSCR_MNS  &kp ESC
                         &delayed LGUI       &mo 1  &kp SPACE    &kp RET  &mo 2  &delayed RALT
            >;
        };

        layer_minus_1 {
            // -----------------------------------------------------------------------------------------
            // | BRI_DN  | BRI_AUTO  | BRI_UP  |  PREV  |  PP  |  NEXT  |   |  1  |  2  |  3  |  +  |  -  | DEL |
            // | BRI_MIN | BACKLIGHT | BRI_MAX | VOL_DN | MUTE | VOL_UP |   |  4  |  5  |  6  |  *  |  /  |  =  |
            // | ASPECT  |    PIP    |   PWR   | SLEEP  |LOGOFF|  LOCK  |   |  7  |  8  |  9  |  0  |  ,  |  .  |
            //                                 |        |      |   SPC  |   | ENT |  M3 |     |

            display-name = "-1";
            bindings = <
&kp C_BRI_DN   &kp C_BRI_AUTO          &kp C_BRI_UP   &kp C_PREV    &kp C_PP         &kp C_NEXT     &kp N1   &kp N2  &kp N3  &kp KP_PLUS      &kp KP_MINUS  &kp DEL
&kp C_BRI_MIN  &kp C_BACKLIGHT_TOGGLE  &kp C_BRI_MAX  &kp C_VOL_DN  &kp C_MUTE       &kp C_VOL_UP   &kp N4   &kp N5  &kp N6  &kp KP_MULTIPLY  &kp KP_DIVIDE &kp KP_EQUAL
&kp C_ASPECT   &kp C_PIP               &kp C_PWR      &kp C_SLEEP   &kp C_AL_LOGOFF  &kp C_AL_LOCK  &kp N7   &kp N8  &kp N9  &kp N0           &kp KP_COMMA  &kp KP_DOT
                                                      &trans        &trans           &kp SPACE      &kp RET  &mo 3   &trans
            >;
        };

        layer_1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL |
            // | CTRL |  ?  |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `  |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~  |
            //                    |     |  M4 | SPC |   | ENT |     |     |

            display-name = "1";
            bindings = <
&none  &kp EXCL      &kp AT  &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTERISK  &kp LPAR  &kp RPAR  &kp DEL
&none  &kp DE_QMARK  &none   &none     &none      &none        &kp MINUS  &kp EQUAL  &kp LBKT      &kp RBKT  &kp BSLH  &kp GRAVE
&none  &none         &none   &none     &none      &none        &kp UNDER  &kp PLUS   &kp LBRC      &kp RBRC  &kp PIPE  &kp TILDE
                             &trans    &mo 4      &kp SPACE    &kp RET    &trans     &trans
            >;
        };

        layer_minus_2 {
            // -----------------------------------------------------------------------------------------
            // |     |  @  |     |  €  |     |     |   |     |   ü  |      |  ö  |       | BSPC |
            // | SHFT|  ä  |  ß  |     |     |     |   |     | LEFT | DOWN |  UP | RIGHT | SHFT |
            // |     |     |     |     |     |     |   |     |  µ   |      |     |       | DEL  |
            //                   |     |     | SPC |   | ENT |      |      |
            display-name = "-2";
            bindings = <
&none      &kp DE_AT        &none      &kp DE_EURO  &none   &none    &none   &kp DE_U_UMLAUT   &none     &kp DE_O_UMLAUT  &none      &kp BSPC
&kp LSHFT  &kp DE_A_UMLAUT  &kp DE_SZ  &none        &none   &none    &none   &kp LEFT          &kp DOWN  &kp UP           &kp RIGHT  &kp RSHIFT
&none      &none            &none      &none        &none   &none    &none   &kp DE_MICRO      &none     &none            &none      &kp DEL
                                       &trans       &trans  &trans   &trans  &trans            &trans
            >;
        };

        layer_2 {
            // -----------------------------------------------------------------------------------------
            // |  F1  | F2  |  F3 | F4  |  F5 |  F6 |   | F7  | F8  | F9  | F10 | F11 | F12 |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |     |
            // |      |     |     |     |     |     |   |     |     |     |     |     |     |
            //                    |     |     | SPC |   | ENT |     |     |
            display-name = "2";
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none   &none   &none   &none    &none    &none
&none       &none         &none         &none         &none         &none           &none   &none   &none   &none    &none    &none
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
